
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.tree.DefaultMutableTreeNode;


public class UserUIView extends javax.swing.JFrame implements TreeComposite{
    private User user;
    private ArrayList<DefaultMutableTreeNode> users;
    private ArrayList<UserUIView> views;
    private DefaultListModel following;
    private DefaultListModel news;
    private TreeComposite message;
    private MessageVisitor tweeters;
    
    //initialize the UI
    public UserUIView(User user, ArrayList<DefaultMutableTreeNode> a, ArrayList<UserUIView> views) {
        this.user = user;
        users = a;
        following = new DefaultListModel();
        news = new DefaultListModel();
        this.views = views;
        tweeters = new MessageVisitor();
    }
    
    //display the UI
    @Override
    public void display() {
        setVisible(true);
        initComponents();
    }
    
    private void updateFollowing() {
        ArrayList<User> followings = user.getFollowing();
        following.removeAllElements();
        following.addElement("Current Following");
        for(int i = 0; i < followings.size(); i++) {
            following.addElement("- " + followings.get(i));
        }
        Following.setModel(following);
    }
    private void updateNewsFeed() {
        ArrayList<String> newsfeed = user.newsfeed();
        news.removeAllElements();
        news.addElement("News Feed");
        for(int i = 0; i < newsfeed.size(); i++) {
            news.addElement("- " + newsfeed.get(i));
        }
        NewsFeed.setModel(news);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        UserID = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        TweetMessage = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        Following = new JList();
        Follow = new javax.swing.JButton();
        Tweet = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        NewsFeed = new JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(user.toString());

        UserID.setColumns(20);
        UserID.setRows(5);
        jScrollPane1.setViewportView(UserID);

        TweetMessage.setColumns(20);
        TweetMessage.setRows(5);
        jScrollPane2.setViewportView(TweetMessage);

        updateFollowing();
        jScrollPane3.setViewportView(Following);

        Follow.setText("Follow User");
        Follow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FollowActionPerformed(evt);
            }
        });

        Tweet.setText("Post Tweet");
        Tweet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TweetActionPerformed(evt);
            }
        });

        updateNewsFeed();
        jScrollPane4.setViewportView(NewsFeed);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Tweet, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Follow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Follow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(Tweet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //follow a targetted User
    private void FollowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FollowActionPerformed
        String name = UserID.getText();
        
        //check if the name is the selected user
        if(name.equals(user.toString())) {
            message = new DisplayMessage("Can't follow yourself!!!");
            message.display();
        }
        
        //check if the user is already following the targetted user
        else if(!user.checkFollowings(name)) {
            message = new DisplayMessage("You are already following the user: " + name);
            message.display();
        }
        
        //else add the user if it exists
        else {
            boolean Exists = false;
            for(int i = 0; i < users.size(); i++) {
                User temp = (User)users.get(i).getUserObject();
                if(name.equals(temp.toString()))
                {
                    Exists = true; 
                    user.Follow(temp);
                    temp.beFollowed(user);
                    message = new DisplayMessage("You are now following: " + name);
                    message.display();
                    break;
                }
            }
            
            //Targetted user does not exist
            if(Exists == false) {
                message = new DisplayMessage("User does not exist!!!");
                message.display();
            }
        }
        UserID.setText("");
        updateFollowing();
        for(int i = 0; i < views.size();i++) {
            views.get(i).updateFollowing();
        }
    }//GEN-LAST:event_FollowActionPerformed
    
    //Post tweet
    private void TweetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TweetActionPerformed
        String tweet = TweetMessage.getText();
        
        //make sure tweet is not empty spaces
        if("".equals(tweet)) {
            message = new DisplayMessage("This is an empty tweet please write something else!!!");
            message.display();
        }
        
        //tweet the message and update all the newsfeed
        else {
            message = new DisplayMessage(user.toString() + " has tweeted: " + tweet);
            message.display();
            tweet = user.toString() + ": " + tweet;
            user.tweet(tweet);
            tweeters.addTweet(tweet);
        }
        TweetMessage.setText("");
        updateNewsFeed();
        for(int i = 0; i < views.size();i++) {
            views.get(i).updateNewsFeed();
        }
    }//GEN-LAST:event_TweetActionPerformed
    
    //returns the messagevisitor
    public MessageVisitor returnVisits() {
        return tweeters;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Follow;
    private javax.swing.JList<String> Following;
    private javax.swing.JList<String> NewsFeed;
    private javax.swing.JButton Tweet;
    private javax.swing.JTextArea TweetMessage;
    private javax.swing.JTextArea UserID;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
